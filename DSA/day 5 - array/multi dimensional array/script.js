const prompt = require("prompt-sync")();

// 1. 2-D array

// let arr = [
//     [1,2,3],
//     [4,5,6],
//     [7,8,9]
// ];

// for(let i = 0; i < arr.length; i++){
//     for(let j = 0; j < arr[i].length; j++){
//         process.stdout.write(`${arr[i][j]} `);
//     }
//     console.log();
// }

// **************************************************************************************************************
// **************************************************************************************************************
// **************************************************************************************************************




// 2. Dyanamic 2D array

// let inner = Number(prompt("Enter the array size "));
// let innerArraySize = Number(prompt("Enter the inner array size "));
// let arr = new Array(inner);

// for(let i = 0; i < arr.length; i++){
//     arr[i] = new Array(innerArraySize);
// }
// // [ [ , , ], [ , , ], [ , , ] ]

// for(let i = 0; i < arr.length; i++){
//     for(let j = 0; j < arr[i].length; j++){
//         arr[i][j] = Number(prompt("Enter the element "));
//     }
// }

// console.log(arr)

// ***********************************************************************************************************************************
// ***********************************************************************************************************************************
// ***********************************************************************************************************************************



// 3. 3d Array

// let arr = [
//     [[1,2,3] , [4,5,6]],
//     [[7,8,9] , [10,11,12]],
//     [[13,14,15] , [16,17,18]]
// ]

// for(let i = 0; i < arr.length; i++){
//     for(let j = 0; j < arr[i].length; j++){
//         for(let k = 0; k < arr[i][j].length; k++){
//             process.stdout.write(`${arr[i][j][k]} `);
//         }
//     }
//     console.log()
// }

// **********************************************************************************************************************
// **********************************************************************************************************************
// **********************************************************************************************************************




// 4. Calculate the diagonal sum

// let arr = [
//     [1,2,3],
//     [4,5,6],
//     [7,8,9]
// ];

// let sum = 0;
// let lsum = 0;
// let rsum = 0;
// for(let i = 0; i < arr.length; i++){
//     for(let j = 0; j < arr[i].length; j++){

//         if(i == j) {
//             lsum += arr[i][j];
//             sum += arr[i][j]
//         }

//         if(i + j === arr.length - 1) {
//             rsum += arr[i][j];
//             sum += arr[i][j]
//         }
//     }
// }

// if(arr.length % 2 === 1){
//     sum -= arr[Math.floor(arr.length / 2)][Math.floor(arr.length / 2)]
// }

// console.log(sum)

// console.log("Left sum : "+lsum)
// console.log("Right Sum : "+rsum)

// ******************************************************************************************************************
// ******************************************************************************************************************
// ******************************************************************************************************************



// 5. Jacked array

// let size =  Number(prompt("Enter the size "));
// let arr = new Array(size);
// for(let i = 0; i < arr.length; i++){
//     let innerSize = Number(prompt("Enter the inner size "));
//     arr[i] = new Array(innerSize);
// }

// for(let i = 0; i < arr.length; i++){
//     for(let j = 0; j < arr[i].length; j++){
//         arr[i][j] = Number(prompt("Enter the number "));
//     }
// }
// console.log(arr)


// *************************************************************************************************************************************
// *************************************************************************************************************************************
// *************************************************************************************************************************************



// 6. Transpose Matrix leetcode - 1572

// let arr = [
//     [1,2,3],
//     [4,5,6],
// ];

// let ans = Array.from({length: arr[0].length}, ()=> Array(arr.length));
// row                               col

// let row = arr.length;
// let col = arr[0].length;
// let ans = new Array(col)

// for(let i = 0; i < ans.length; i++){
//     ans[i] = new Array(row)
// }

// for(let i = 0; i < ans.length; i++){
//     for(let j = 0; j < ans[i].length; j++){
//         ans[i][j] = arr[j][i]
//         process.stdout.write(`${ans[i][j]} `)
//     }
//     console.log()
// }


// *******************************************************************************************************************************
// *******************************************************************************************************************************
// *******************************************************************************************************************************



// 7. Rotate image leetcode - 48
//  it ic combination of transpose matrix + reverse of an array

// let arr = [
//     [1,2,3],
//     [4,5,6],
//     [7,8,9]
// ];

// for(let i = 0; i < arr.length; i++){
//     for(let j = i; j < arr.length; j++){
//         let temp = arr[i][j];
//         arr[i][j] = arr[j][i];
//         arr[j][i] = temp;
//     }
// }

// for(let i = 0; i < arr.length; i++){
//     let k = 0, j = arr.length - 1;
//     while(k < j){
//         let temp = arr[i][k];
//         arr[i][k] = arr[i][j]
//         arr[i][j] = temp;
//         k++;
//         j--;
//     }
// }
// console.log(arr)


// ****************************************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// 8. flipping an image leetcode - 832

// let arr = [
//     [1,1,0],
//     [1,0,1],
//     [0,0,0]
// ];

// for(let i = 0; i < arr.length; i++){
//     let k = 0, j = arr.length - 1;
//     while(k < j){
//         let temp = arr[i][k];
//         arr[i][k] = arr[i][j];
//         arr[i][j] = temp;
//         k++;
//         j--
//     }

//     for(let j = 0; j < arr[i].length; j++){
//         if(arr[i][j] === 0){
//             arr[i][j] = 1;
//         }
//         else arr[i][j] = 0;
//     }
// }

// console.log(arr)



// ***********************************************************************************************************************************
// ***********************************************************************************************************************************
// ***********************************************************************************************************************************

// 9. spiral matrix

let mat = [
  [1, 2, 3, 4, 5],
  [6, 7, 8, 9, 10],
  [11, 12, 13, 14, 15],
  [16, 17, 18, 19, 20],
];

let rStart = 0;
let cStart = 0;
let rEnd = mat.length - 1;
let cEnd = mat[0].length - 1;

let result = [];


while (rStart <= rEnd && cStart <= cEnd) {
  for (let i = cStart; i <= cEnd; i++) {
    result.push(mat[rStart][i]);
  }

  rStart++;

  for (let i = rStart; i <= rEnd; i++) {
    result.push(mat[i][cEnd]);
  }

  cEnd--;

  if (rStart <= rEnd) {
    for (let i = cEnd; i >= cStart; i--) {
      result.push(mat[rEnd][i]);
    }
    rEnd--;
  }

  if (cStart <= cEnd) {
    for (let i = rEnd; i >= rStart; i--) {
      result.push(mat[i][cStart]);
    }
    cStart++;
  }
}

console.log(result);
